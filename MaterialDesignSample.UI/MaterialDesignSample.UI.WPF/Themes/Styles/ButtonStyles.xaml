<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:MaterialDesignSample.UI.WPF"
                    xmlns:ap="clr-namespace:MaterialDesignSample.UI.WPF.AttachedProperties">

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.CornerRadius)}">
                <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <Border x:Name="FocusBorder"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlDefaultBorder}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlBorder}"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeGround}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}"/>

    <ControlTemplate x:Key="WindowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="MouseOverBorder"
                    Background="{theme:ThemeResource ResourceKey=WindowControlMouseOverBackground}"
                    Opacity="0"/>
            <ContentPresenter x:Name="ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=WindowHeaderForeground}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ap:ButtonProperties.CornerRadius" Value="0"/>
        <Setter Property="Template" Value="{StaticResource WindowButtonTemplate}"/>
    </Style>

</ResourceDictionary>