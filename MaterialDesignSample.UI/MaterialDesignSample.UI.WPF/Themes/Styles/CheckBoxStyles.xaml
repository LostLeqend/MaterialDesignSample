<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:MaterialDesignSample.UI.WPF">

    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark"
                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                          Fill="{theme:ThemeResource ResourceKey=GlyphForeground}" 
                          Margin="1" Opacity="0" Stretch="None" />
                    <Rectangle x:Name="indeterminateMark" 
                               Fill="{theme:ThemeResource ResourceKey=GlyphForeground}" 
                               Margin="2" Opacity="0" />
                </Grid>
            </Border>
            <Border x:Name="FocusBorder"
                    Grid.Column="0" Margin="1"
                    Width="{Binding ElementName=checkBoxBorder, Path=ActualWidth}"
                    Height="{Binding ElementName=checkBoxBorder, Path=ActualHeight}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                    BorderThickness="1"
                    Visibility="Collapsed"/>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ControlContentBackground}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlBorder}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource CheckBoxControlTemplate}" />
    </Style>
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}"/>

</ResourceDictionary>